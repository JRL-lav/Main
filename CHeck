_G.Settings = {
	Theme = {
		Colour1 = Color3.fromRGB(46, 255, 255);
		Colour2 = Color3.fromRGB(228, 92, 255);
	};
	TabGradient = true; -- Makes the in
	PageGradient = true
}
if getgenv().Ui then 
	getgenv().Ui:Destroy()
end



local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")



function Sort(pattern, values)
    local new = {}
    pattern = pattern:lower()
    
    if pattern == "" then
        return values
    end
    
    for i, value in pairs(values) do
        if tostring(value):lower():find(pattern) then
            table.insert(new, value)
        end
    end
    
    return new
end

local function MakeDraggable(topbarobject, object) -- Dont Know Who made this but thanks
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)

	topbarobject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)

	UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end


function Ripple(Object)
	spawn(function()
		local Circle = Instance.new("ImageLabel")
		Circle.Parent = Object
		Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Circle.BackgroundTransparency = 1.000
		Circle.ZIndex = 10
		Circle.Image = "rbxassetid://266543268"
		Circle.ImageColor3 = Color3.fromRGB(210,210,210)
		Circle.ImageTransparency = 0.8
		Circle.Position = UDim2.new(0, Mouse.X - Circle.AbsolutePosition.X, 0, Mouse.Y - Circle.AbsolutePosition.Y)
		local Size = Object.AbsoluteSize.X
		TweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(math.clamp(Mouse.X - Object.AbsolutePosition.X, 0, Object.AbsoluteSize.X)/Object.AbsoluteSize.X,Object,math.clamp(Mouse.Y - Object.AbsolutePosition.Y, 0, Object.AbsoluteSize.Y)/Object.AbsoluteSize.Y) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, Size = UDim2.fromOffset(Size,Size)}):Play()
		spawn(function()
			wait(0.5)
			Circle:Destroy()
		end)
	end)
end



local DropDown = Instance.new("ScreenGui")
DropDown.Parent = game.CoreGui
DropDown.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
DropDown.Name = HttpService:GenerateGUID(false)

	
if getgenv then
    getgenv().Ui = DropDown
end


if syn then 
    syn.protect_gui(DropDown)
end






local Libary = {}

function Libary:CreateCl(class, properties)
	properties = typeof(properties) == "table" and properties or {}
	local inst = Instance.new(class)
	for property, value in next, properties do
		inst[property] = value
	end
	return inst
end

local tabs = {}

function Libary:Create(Name)
    
    local Size = 40
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TextLabel = Instance.new("TextLabel")
    local Bar = Instance.new("Frame")
    local Close = Instance.new("ImageButton")
    local Top = Instance.new("Frame")
    local Holder = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local UIPadding = Instance.new("UIPadding")




    Main.Name = "Main"
    Main.Parent = DropDown
    Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Main.Position = UDim2.new(0, #tabs == 0 and 200 or tabs[#tabs].Position.X.Offset + 250, 0, 50)
    Main.Size = UDim2.new(0, 230, 0, 40)

    table.insert(tabs,Main)

    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = Main

    TextLabel.Parent = Main
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.Size = UDim2.new(0, 230, 0, 40)
    TextLabel.Font = Enum.Font.Gotham
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextSize = 17.000
    TextLabel.Text = Name

    Bar.Name = "Bar"
    Bar.Parent = Main
    Bar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    Bar.BackgroundTransparency = 0
    Bar.BorderColor3 = Color3.fromRGB(255, 255, 255)
    Bar.BorderSizePixel = 0
    Bar.Position = UDim2.new(0, 0, 0, 38)
    Bar.Size = UDim2.new(1, 0, 0, 1)
    

    Close.Parent = Main
    Close.Active = false
    Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Close.BackgroundTransparency = 1.000
    Close.Position = UDim2.new(0, 201, 0, 10)
    Close.Rotation = 180
    Close.Selectable = false
    Close.Size = UDim2.new(0, 20, 0, 20)
    Close.AutoButtonColor = false
    Close.Image = "rbxassetid://7072725342"


    Holder.Name = "Holder"
    Holder.Parent = Main
    Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Holder.BackgroundTransparency = 1.000
    Holder.ClipsDescendants = true
    Holder.Position = UDim2.new(0, 0, 0, 38)
    Holder.Size = UDim2.new(0, 230, 0, 0)

    UIListLayout.Parent = Holder
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Holder.Size = UDim2.new(0,230,0,UIListLayout.AbsoluteContentSize.Y)
        Main.Size = UDim2.new(0,230,0,UIListLayout.AbsoluteContentSize.Y + 42)
    end)


    UIPadding.Parent = Holder
    UIPadding.PaddingBottom = UDim.new(0, 1)
    UIPadding.PaddingTop = UDim.new(0, 1)

    local Stoke = Instance.new("UIStroke")
	Stoke.Parent = Main 
	Stoke.Name = "Stroke"
	Stoke.Color = Color3.fromRGB(255, 255, 255)
	Stoke.Thickness = 1.2


	local UIGradient = Instance.new("UIGradient")
	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00,  _G.Settings.Theme.Colour1), ColorSequenceKeypoint.new(1.00, _G.Settings.Theme.Colour2)}
	UIGradient.Parent = Stoke

	spawn(function()
		while wait() do 
			UIGradient.Rotation = UIGradient.Rotation + 1
		end
	end)

    MakeDraggable(TextLabel, Main)

    local opened = true 
    Close.MouseButton1Click:connect(function()
        opened = not opened
        TweenService:Create(Close, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = opened and 180 or 45}):Play()
        Main:TweenSize(opened and UDim2.new(0, 230, 0, UIListLayout.AbsoluteContentSize.Y + 42) or UDim2.new(0, 230, 0, 40),2,1,.1)
        Bar.BackgroundTransparency = opened and 0 or 1
        Holder:TweenSize(opened and UDim2.new(0, 230, 0, UIListLayout.AbsoluteContentSize.Y) or UDim2.new(0, 230, 0, 0)  ,2,1,0.05)
	end)


    local Folders = {}
    function Folders:Tab(Name)
        local Folder = Instance.new("Frame")
        local TabTitle = Instance.new("TextLabel")
        local Close2 = Instance.new("ImageButton")
        local PagesHolder = Instance.new("Frame")
        local UIListLayout2 = Instance.new("UIListLayout")

        Folder.Name = "Folder"
        Folder.Parent = Holder
        Folder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        Folder.BackgroundTransparency = 0
        Folder.Position = UDim2.new(0, 0, 1, 0)
        Folder.Size = UDim2.new(0, 230, 0, 34)
        Folder.BorderSizePixel = 0

        TabTitle.Parent = Folder
        TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.BackgroundTransparency = 1.000
        TabTitle.Size = UDim2.new(0, 230, 0, 34)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.TextColor3 = Color3.fromRGB(230, 230, 230)
        TabTitle.TextSize = 16
        TabTitle.Text = Name

        Close2.Parent = Folder
        Close2.Active = false
        Close2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Close2.BackgroundTransparency = 1.000
        Close2.Position = UDim2.new(0, 201, 0, 8)
        Close2.Rotation = 45.000
        Close2.Selectable = false
        Close2.Size = UDim2.new(0, 18, 0, 18)
        Close2.AutoButtonColor = false
        Close2.Image = "rbxassetid://7072725342"


        PagesHolder.Name = "Pages Holder"
        PagesHolder.Parent = Holder
        PagesHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        PagesHolder.BorderSizePixel = 0
        PagesHolder.Position = UDim2.new(0, 0, 1, 0)
        PagesHolder.Size = UDim2.new(0, 230, 0, 0)
        PagesHolder.ClipsDescendants = true

        UIListLayout2.Parent = PagesHolder
        UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder

        local UIPadding = Instance.new("UIPadding")


        UIPadding.Parent = PagesHolder
        UIPadding.PaddingLeft = UDim.new(0, 5)
        UIPadding.PaddingRight = UDim.new(0, 5)
      
        local open = false
        Close2.MouseButton1Click:connect(function()
            open = not open
            TweenService:Create(Close2, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = open and 180 or 45}):Play()
            PagesHolder:TweenSize(open and UDim2.new(0,230,0,UIListLayout2.AbsoluteContentSize.Y) or UDim2.new(0,230,0,0) ,2,1,.1)
        end)

        UIListLayout2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			 PagesHolder.Size = open and UDim2.new(0,230,0,UIListLayout2.AbsoluteContentSize.Y) or UDim2.new(0,230,0,0)
		end)
        

        local TabFunctions = {}
        function TabFunctions:Label(Text)
            local TextLabel = Instance.new("TextLabel")
            TextLabel.Size =  UDim2.new(0, 220, 0, 30)
            TextLabel.BackgroundTransparency = 1
            TextLabel.Text = " "..Text
            TextLabel.TextSize = 16
            TextLabel.Font = Enum.Font.SourceSans;
            TextLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
            TextLabel.Parent = PagesHolder
            TextLabel.Position = UDim2.new(0,110, 0, 13)

        end
        function TabFunctions:Button(Name,Callback)
            Callback = Callback or function() end
            
            local Frame = Instance.new("Frame")
            Frame.Name = "Lineholder"
            Frame.Parent = PagesHolder
            Frame.BackgroundTransparency = 1
            Frame.Size = UDim2.new(1, 0, 0, 30)


            local TextButton = Instance.new("TextButton")
            TextButton.Name = "Button"
            TextButton.Parent = Frame
            TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextButton.Size = UDim2.new(0, 220, 0, 25)
            TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextButton.TextSize = 16
            TextButton.Text = ""
            TextButton.Font = Enum.Font.SourceSans
            TextButton.AnchorPoint = Vector2.new(.5,.5)
            TextButton.Position = UDim2.new(0.5,0, 0.5, 0)
            TextButton.AutoButtonColor = false
            TextButton.ClipsDescendants = true

            local TextLabel = Instance.new("TextLabel")


            TextLabel.Parent = TextButton
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.Size = UDim2.new(1, 0, 0, 27)
            TextLabel.Font = Enum.Font.SourceSans
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextSize = 16.000
            TextLabel.Text = Name or "Button"


            local UIGradient = Instance.new("UIGradient")
            UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00,  _G.Settings.Theme.Colour1), ColorSequenceKeypoint.new(1.00, _G.Settings.Theme.Colour2)}
            UIGradient.Parent = TextButton

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0,3, 0)
            UICorner.Parent = TextButton
            UICorner.Name = "btncornor"
            
            
            local ImageLabel = Instance.new("ImageLabel")


            ImageLabel.Parent = TextButton
            ImageLabel.AnchorPoint = Vector2.new(0, 0.5)
            ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ImageLabel.BackgroundTransparency = 1.000
            ImageLabel.Position = UDim2.new(0, 190, 0, 12)
            ImageLabel.Size = UDim2.new(0, 22, 0,22)
            ImageLabel.Image = "http://www.roblox.com/asset/?id=6031229361"

            TextButton.MouseButton1Click:Connect(function()
                Ripple(TextButton)
                Callback()
            end)
        end
        function TabFunctions:Space(Text)
            local Frame = Instance.new("Frame")
            Frame.Parent = PagesHolder
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.Size = UDim2.new(1, 0, 0, 10)

        end


        function TabFunctions:Separate(Text)
	  	 local Frame = Instance.new("Frame")
            Frame.Parent = PagesHolder
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.Size = UDim2.new(1, 0, 0, 10)

            local Frame = Instance.new("Frame")
            local Frame_2 = Instance.new("Frame")
            local TextLabel = Instance.new("TextLabel")

            Frame.Parent = PagesHolder
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.Size = UDim2.new(1, 0, 0, 13)

            Frame_2.Parent = Frame
            Frame_2.AnchorPoint = Vector2.new(0.5, 0.5)
            Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame_2.BackgroundTransparency = 0.500
            Frame_2.BorderSizePixel = 0
            Frame_2.Position = UDim2.new(0.5, 0, 0.5, 0)
            Frame_2.Size = UDim2.new(1, 0, 0, 1)

            TextLabel.Parent = Frame_2
            TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
            TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
            TextLabel.Size = UDim2.new(0, 0, 0, 20)
            TextLabel.Font = Enum.Font.SourceSansBold
            TextLabel.TextColor3 = Color3.fromRGB(219, 226, 226)
            TextLabel.TextSize = 20.000
            TextLabel.Text = "\227\128\138  " .. (Text or "CAT") .. "  \227\128\139"
            TextLabel.AutomaticSize = Enum.AutomaticSize.X
            
	     local Frame = Instance.new("Frame")
            Frame.Parent = PagesHolder
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.Size = UDim2.new(1, 0, 0, 10)

        end

        

        function TabFunctions:Toggle(Name,State,Callback)


            local Frame = Instance.new("Frame")
            local TextLabel = Instance.new("TextLabel")
            local Frame_2 = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local ImageLabel = Instance.new("ImageLabel")
            local UICorner_2 = Instance.new("UICorner")
            local ImageLabel_2 = Instance.new("ImageLabel")
            local Frame_3 = Instance.new("Frame")

            --Properties:

            Frame.Parent =PagesHolder
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.Position = UDim2.new(0.0045454544, 0, 0.0285714287, 0)
            Frame.Size = UDim2.new(1, 0, 0, 35)

            TextLabel.Parent = Frame
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.Size = UDim2.new(1, 0, 1, 0)
            TextLabel.Font = Enum.Font.SourceSans
            TextLabel.Text = " "..Name.." "
            TextLabel.TextColor3 = Color3.fromRGB(219, 226, 226)
            TextLabel.TextSize = 19.000
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left

            Frame_2.Parent = TextLabel
            Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame_2.BackgroundTransparency = 1.000
            Frame_2.Position = UDim2.new(0.891, 0,0.2, 0)
            Frame_2.Size = UDim2.new(0, 19, 0, 19)


            
            local Stoke = Instance.new("UIStroke")
            Stoke.Parent = Frame_2 
            Stoke.Name = "Stroke"
            Stoke.Color = Color3.fromRGB(100, 100, 100)
            Stoke.Thickness = 1.2

    
            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = Frame_2
            wait()


            Frame_3.Parent = Frame_2
            Frame_3.BackgroundColor3 =  _G.Settings.Theme.Colour1
            Frame_3.BackgroundTransparency = 0
            Frame_3.Position = UDim2.new(0, 0,0, 0)
            Frame_3.Size = UDim2.new(0, 0, 1,0) 
            Frame_3.BorderSizePixel = 0
            Frame_3.ClipsDescendants = true

            UICorner_2.Parent = ImageLabel

            ImageLabel_2.Parent = Frame_3
            ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
            ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ImageLabel_2.BackgroundTransparency = 1.000
            ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
            ImageLabel_2.Size = UDim2.new(1, 0, 1, 0)
            ImageLabel_2.Image = "rbxassetid://7812909048"
            ImageLabel_2.ImageColor3 = Color3.fromRGB(0,0,0)

            local options = {}

            
            function options:SetState(Val)
                State = Val
                Frame_3:TweenSize(State and UDim2.new(1, 0, 1, 0) or UDim2.new(0, 0, 1,0), "Out", "Quad", 0.1)
                TweenService:Create(Stoke, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Color = State and Color3.fromRGB(0, 170, 255) or inContact and Color3.fromRGB(140, 140, 140) or Color3.fromRGB(100, 100, 100)}):Play()

                Callback(State)
            end

            local inContact
            Frame.InputBegan:connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    options:SetState(not State)
                end
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    inContact = true
                    if not State then
                        TweenService:Create(Stoke, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Color = Color3.fromRGB(140, 140, 140)}):Play()
                    end
                end
            end)

            Frame.InputEnded:connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    inContact = true
                    if not State then
                        TweenService:Create(Stoke, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Color = Color3.fromRGB(100, 100, 100)}):Play()
                    end
                end
            end)
           options:SetState(State)

            return options
        end


        function TabFunctions:Dropdown(Name,List,Current,Callback)
            local Size = 0
            Current = Current or nil
            Size = #List == 1 and 21 or #List == 2 and 42 or 63
            Callback = Callback  or function() end
            local ScrollingFrame = Instance.new("ScrollingFrame")
            local TextButton = Instance.new("TextButton")
            local UIListLayout = Instance.new("UIListLayout")
            local TextButton_2 = Instance.new("TextButton")
            local TextButton_3 = Instance.new("TextButton")


         
            UIListLayout.Parent = ScrollingFrame
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            
            ScrollingFrame.Active = true
            ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ScrollingFrame.BorderSizePixel = 0
            ScrollingFrame.BackgroundTransparency = 1.000
            ScrollingFrame.Size = UDim2.new(1, 0, 0, 0)
            ScrollingFrame.ZIndex = 5
            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            ScrollingFrame.ScrollBarThickness = 5
            ScrollingFrame.ScrollingEnabled = true
            ScrollingFrame.ScrollBarImageColor3 =Color3.fromRGB(0, 0, 0)
            ScrollingFrame.ScrollBarImageTransparency = 1
            
            local Holder = Instance.new("Frame")
            local Frame = Instance.new("Frame")
            local TextBox = Instance.new("TextBox")
            local UICorner = Instance.new("UICorner")
            local TextLabel = Instance.new("TextLabel")
            local UICorner_2 = Instance.new("UICorner")


            Holder.Name = "Holder"
            Holder.Parent = PagesHolder
            Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Holder.BackgroundTransparency = 1.000
            Holder.Size = UDim2.new(1, 0, 0, 37)
            ScrollingFrame.Parent = PagesHolder


            Frame.Parent = Holder
            Frame.AnchorPoint = Vector2.new(0.5, 0.5)
            Frame.BackgroundColor3 = Current and  Color3.fromRGB(255,255,255) or  Color3.fromRGB(100,100,100) 
            Frame.BorderSizePixel = 0
            Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Frame.Size = UDim2.new(1, 0, 0, 29)

            
            

            local UIGradient = Instance.new("UIGradient")
            UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00,  _G.Settings.Theme.Colour1), ColorSequenceKeypoint.new(1.00, _G.Settings.Theme.Colour2)}
            UIGradient.Parent = Frame
            UIGradient.Enabled = Current and true or false

            spawn(function()
                while wait() do 
                    UIGradient.Rotation = UIGradient.Rotation + 1
                end
            end)


            TextBox.Parent = Frame
            TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
            TextBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            TextBox.BorderSizePixel = 0
            TextBox.Position = UDim2.new(0.5, 0, 0.5, 0)
            TextBox.Size = UDim2.new(1, -2, 1, -2)
            TextBox.Font = Enum.Font.SourceSans
            TextBox.PlaceholderText = "Text"
            TextBox.Text = Current and Current or ""
            TextBox.TextColor3 = Current and  Color3.fromRGB(219, 226, 226) or Color3.fromRGB(178, 178, 178)
            TextBox.TextSize = 14.000

            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = TextBox

            TextLabel.Parent = TextBox
            TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.0781100914, 0, 0, -7)
            TextLabel.Size = UDim2.new(0, 36, 0, 14)
            TextLabel.Font = Enum.Font.SourceSans
            TextLabel.Text = "  "..Name.."  "
            TextLabel.TextColor3 = Current and  Color3.fromRGB(219, 226, 226) or Color3.fromRGB(178, 178, 178)
            TextLabel.TextSize = 14.000
            TextLabel.AutomaticSize = Enum.AutomaticSize.X
            UICorner_2.CornerRadius = UDim.new(0, 3)
            UICorner_2.Parent = Frame

            UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
				ScrollingFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y) 
			end)

            local function Change(bool)
                TextLabel.TextColor3 = bool and Color3.fromRGB(219, 226, 226) or Color3.fromRGB(178, 178, 178) 
                TextBox.TextColor3 = bool and Color3.fromRGB(219, 226, 226) or Color3.fromRGB(178, 178, 178) 
                TextBox.Text = bool and Current or ""
                UIGradient.Enabled = bool and true or false
                Frame.BackgroundColor3 = bool and  Color3.fromRGB(255,255,255) or  Color3.fromRGB(100,100,100) 
            end
    
            local Functions = {}
            function Functions:RemoveAll() 
                for i,v in pairs(ScrollingFrame:GetChildren()) do 
                    if v:IsA("TextButton") then 
                        v:Destroy()
                    end
                end
            end
            TextBox.Focused:Connect(function()
                Change(false)
                ScrollingFrame:TweenSize(UDim2.new(1, 0,0, Size), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, .1, true)
                ScrollingFrame.ScrollBarImageTransparency = 0
            end)

            function Update(pattern,bool)   
                local active = 0
                for i,v in pairs(ScrollingFrame:GetChildren()) do
                    if v:IsA("TextButton") then  
                        if bool then 
                            v.Visible = true
                            active = active + 1
                        elseif v.Text:lower():find(pattern:lower())  then
                            v.Visible = true
                            active = active + 1
                        else
                            v.Visible = false
                        end
                    end
                end
                Size = active == 1 and 21 or active == 2 and 42 or active >= 3 and 63 or 0
                ScrollingFrame:TweenSize(UDim2.new(1, 0,0, Size), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, .1, true)
            end
            TextBox:GetPropertyChangedSignal("Text"):Connect(function()
                if TextBox.Text == "" then 
                    Update("",true)
                else 
                    Update(TextBox.Text,false)
                end
            end)


            function Functions:Refresh(NewList)
                NewList = typeof(NewList) == "table" and NewList or {}
                ScrollingFrame:TweenSize(UDim2.new(1, 0,0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, .1, true)
                wait(.1)
                ScrollingFrame.ScrollBarImageTransparency = 1
                Change(false)
                Functions:RemoveAll() 
                Size = #NewList == 1 and 21 or #NewList == 2 and 42 or #NewList >= 3 and 63 or 0
                 for i,v in next, NewList do 
                    local TextButtons = Instance.new("TextButton")

                    TextButtons.Parent = ScrollingFrame
                    TextButtons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    TextButtons.BackgroundTransparency = 1.000
                    TextButtons.Position = UDim2.new(-0.00921601243, 0, 1.03333318, 0)
                    TextButtons.Size = UDim2.new(1, 0, 0, 21)
                    TextButtons.Font = Enum.Font.Gotham
                    TextButtons.TextColor3 = Color3.fromRGB(255, 255, 255)
                    TextButtons.TextSize = 12.000
                    TextButtons.Text = v

                    TextButtons.MouseButton1Click:Connect(function()
                        Current = v
                        TextBox.Text = Current
                        Callback(Current)
                        ScrollingFrame:TweenSize(UDim2.new(1, 0,0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, .1, true)
                        ScrollingFrame.ScrollBarImageTransparency = 1
                        Change(true)
                    end)
                end
            end
                for i,v in next, List do 

                    local TextButtons = Instance.new("TextButton")

                    TextButtons.Parent = ScrollingFrame
                    TextButtons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    TextButtons.BackgroundTransparency = 1.000
                    TextButtons.Position = UDim2.new(-0.00921601243, 0, 1.03333318, 0)
                    TextButtons.Size = UDim2.new(1, 0, 0, 21)
                    TextButtons.Font = Enum.Font.Gotham
                    TextButtons.TextColor3 = Color3.fromRGB(255, 255, 255)
                    TextButtons.TextSize = 12.000
                    TextButtons.Text = v

                    TextButtons.MouseButton1Click:Connect(function()
                        Current = v
                        TextBox.Text = Current
                        Callback(Current)
                        ScrollingFrame:TweenSize(UDim2.new(1, 0,0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, .1, true)
                        ScrollingFrame.ScrollBarImageTransparency = 1
                        Change(true)
                    end)
                end

            return Functions
        end
        function TabFunctions:Slider(Name,min,max,value,Callback)
            Callback = Callback or function() end

            local Holder = Instance.new("Frame")
            local Title = Instance.new("TextLabel")
            local Slider = Instance.new("Frame")
            local fill = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local UICorner_2 = Instance.new("UICorner")
            local circle = Instance.new("ImageLabel")
            local TextBox = Instance.new("TextBox")
            local UICorner_3 = Instance.new("UICorner")

            --Properties:

            Holder.Name = "Holder"
            Holder.Parent = PagesHolder
            Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Holder.BackgroundTransparency = 1.000
            Holder.ClipsDescendants = true
            Holder.Size = UDim2.new(1, 0, 0, 50)

            Title.Name = "Title"
            Title.Parent = Holder
            Title.BackgroundColor3 = Color3.fromRGB(153, 170, 181)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0, 0, 0, 4)
            Title.Size = UDim2.new(1, 0, 0, 20)
            Title.Font = Enum.Font.SourceSans
            Title.Text = "  Slider"
            Title.TextColor3 = Color3.fromRGB(219, 226, 226)
            Title.TextSize = 19.000
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Slider.Name = "Slider"
            Slider.Parent = Holder
            Slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Slider.BorderColor3 = Color3.fromRGB(40, 40, 40)
            Slider.BorderSizePixel = 0
            Slider.Position = UDim2.new(0, 10, 0, 34)
            Slider.Size = UDim2.new(1, -20, 0, 5)

            fill.Name = "fill"
            fill.Parent = Slider
            fill.BackgroundColor3 =  _G.Settings.Theme.Colour1
            fill.BorderSizePixel = 0
            fill.Size = UDim2.new((value or 0) / max, 0, 1, 0)

            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = fill

            UICorner_2.CornerRadius = UDim.new(0, 3)
            UICorner_2.Parent = Slider

            circle.Parent = Slider
            circle.AnchorPoint = Vector2.new(0.5, 0.5)
            circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            circle.BackgroundTransparency = 1.000
            circle.Position = UDim2.new(0.25999999, 0, 0.5, 0)
            circle.Size = UDim2.new(2.8, 0, 2.8, 0)
            circle.SizeConstraint = Enum.SizeConstraint.RelativeYY
            circle.Image = "rbxassetid://3570695787"
            circle.ImageColor3 = _G.Settings.Theme.Colour2
            circle.ScaleType = Enum.ScaleType.Slice
            circle.SliceCenter = Rect.new(100, 100, 100, 100)

            TextBox.Parent = Holder
            TextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            TextBox.BorderSizePixel = 0
            TextBox.Position = UDim2.new(1, -6, 0, 4)
            TextBox.Size = UDim2.new(0, -60, 0, 18)
            TextBox.Font = Enum.Font.Gotham
            TextBox.Text = value or 1
            TextBox.TextColor3 = Color3.fromRGB(235, 235, 235)
            TextBox.TextSize = 14.000
            TextBox.TextWrapped = true

            UICorner_3.CornerRadius = UDim.new(0, 3)
            UICorner_3.Parent = TextBox

           
            local Slidsa = {}


            
            local sliding
	        local inContact
            Holder.InputBegan:connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    TweenService:Create(circle, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(3.2, 0, 3.2, 0)}):Play()
                    sliding = true
                    Slidsa:SetValue(min + ((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X) * (max - min))
                end
            end)

            UserInputService.InputChanged:connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement and sliding then
                    Slidsa:SetValue(min + ((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X) * (max - min))
                end
            end)

            Holder.InputEnded:connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    sliding = false
                    TweenService:Create(circle, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(2.8, 0, 2.8, 0)}):Play()
                end
            end)
            TextBox.FocusLost:connect(function()
                Slidsa:SetValue(tonumber(TextBox.Text) or value)
            end)

            local function round(num, bracket)
                bracket = bracket or 1
                local a = math.floor(num/bracket + (math.sign(num) * 0.5)) * bracket
                if a < 0 then
                    a = a + bracket
                end
                return a
            end

            function Slidsa:SetValue(value)
	        	value = round(value, 1)
                value = math.clamp(value, min, max)
                circle:TweenPosition(UDim2.new((value - min) / (max - min), 0, 0.5, 0), "Out", "Quad", 0.1, true)
                if min >= 0 then
                    fill:TweenSize(UDim2.new((value - min) / (max - min), 0, 1, 0), "Out", "Quad", 0.1, true)
                else
                    fill:TweenPosition(UDim2.new((0 - min) / (max - min), 0, 0, 0), "Out", "Quad", 0.1, true)
                    fill:TweenSize(UDim2.new(value / (max - min), 0, 1, 0), "Out", "Quad", 0.1, true)
                end
                TextBox.Text = value
                Callback(value)
            end

            Slidsa:SetValue(value)
	
        end
        return TabFunctions
    end
    return Folders 
end
return Libary
