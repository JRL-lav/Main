
pcall(function()
	game:GetService("CoreGui").ScreenGui:Destroy()
end)


local Players = game:GetService("Players")
local Plr = Players.LocalPlayer


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/JRL-lav/Scripts/main/U", true))()

local Window = Library:CreateWindow("Main")
local folder = Window:AddFolder('Farming')
zones = {}
for i,v in pairs(game:GetService("Workspace").Dummys:GetChildren()) do 
	table.insert(zones,v.Name)
end
local zone = "Toxic"
folder:AddList({text = "Select Zone",flag = "list" , value = "Toxic",values = zones, callback = function(bool) 
	zone = bool
	Refresh()
end})


local mobs = {}
for i,v in pairs(game:GetService("Workspace").Dummys[zone]:GetChildren()) do
    if not table.find(mobs,v.Name) then
        table.insert(mobs, v.Name)
    end
end
local mob
local drop = folder:AddList({text = "Select Mob",flag = "list" , values = mobs, callback = function(bool) 
	mob = bool
end})
folder:AddButton({text = "Refresh Mobs", flag = "button", callback = function() 
	drop:RemoveAll("")
	local mobs2 = {}
	for i,v in pairs(game:GetService("Workspace").Dummys[zone]:GetChildren()) do
    	if not table.find(mobs2,v.Name) then
			table.insert(mobs2, v.Name)
			drop:AddValue(v.Name)
		end
	end
end})

local Farm
folder:AddToggle({text = "Auto Farm",state =false ,callback = function(bool) 
	Farm = bool
end})



local Strength
folder:AddToggle({text = "Auto Strength",state =false ,callback = function(bool) 
	Strength = bool
end})
local Speed
folder:AddToggle({text = "Auto Speed",state =false ,callback = function(bool) 
	Speed = bool
end})

local folder = Window:AddFolder('Quest')
local Quests
folder:AddList({text = "Select Quest",flag = "list" , value = "Normal",values = {"Normal","Boss"}, callback = function(bool) 
	Quests = bool
end})
local Quest
folder:AddToggle({text = "Auto Quest",state =false ,callback = function(bool) 
	Quest = bool
end})
local Teleports = Window:AddFolder('Pet')
local open
folder:AddToggle({text = "Auto Open",state =false ,callback = function(bool) 
	open = bool
end})
local del
folder:AddToggle({text = "Auto Delete",state =false ,callback = function(bool) 
	del = bool
end})

spawn(function() 
    while wait() do 
	if open then
            local args = {
		    [1] = "Lunar",
		    [2] = "Triple"
		}

	   game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
        end
    end
end)
spawn(function() 
    while wait() do 
	if del then
           
		local l__Pets__1 = game.Players.LocalPlayer:WaitForChild("Pets", math.huge);
		function GetFolderFromPetID(p1)
			local v1, v2, v3 = pairs(l__Pets__1:GetChildren());
			while true do
				local v4, v5 = v1(v2, v3);
				if v4 then

				else
					break;
				end;
				v3 = v4;
				if v5.PetID.Value == p1 then
					return v5;
				end;	
			end;
			return nil;
		end;
		local u2 = false;
		local l__ReplicatedStorage__3 = game.ReplicatedStorage;
		if u2 then
		    return;
		end;
		local script = Plr.PlayerGui.Main.PetInventory.SideFrame.AutoDeleteFrame.Delete.onClick
		u2 = true;
		local v6 = {};
		for v7, v8 in pairs(Plr.PlayerGui.Main.PetInventory.MainFrame.Inventory:GetChildren()) do
		    if v8:IsA("Frame") then
			local l__PetID__9 = v8.PetID;
			local v10 = GetFolderFromPetID(l__PetID__9.Value);
			if v10 and (l__ReplicatedStorage__3.Pets.Rarities:FindFirstChild(l__ReplicatedStorage__3.Pets.Models:FindFirstChild(v10.Name).Settings.Rarity.Value).Order.Value <= script.Parent.HigherNumberRarity.Value and v10.Equipped.Value == false) then
			    v6[#v6 + 1] = l__PetID__9.Value;
			end;
		    end;
		end;
		for v11, v12 in pairs(v6) do
		    spawn(function()
			l__ReplicatedStorage__3.RemoteEvents.PetActionRequest:InvokeServer("Delete", {
			    PetID = v12
			});
		    end);
		end;
		u2 = false;



        end
    end
end)
local Window = Library:CreateWindow("Other")
local Teleports = Window:AddFolder('Teleports')

for i,v in pairs(game:GetService("Workspace").Portals:GetChildren()) do 
	if v:IsA("Folder") and v.Name ~= "ToPortalAreas" then 
		Teleports:AddButton({text = v.Name, flag = "button", callback = function() 
			Plr.Character.HumanoidRootPart.CFrame = v.Portal2.Teleport.CFrame * CFrame.new(0,0,-10)
		end})
	end
end

local setting = Window:AddFolder('Settings')

local dis = 4
setting:AddSlider({text = "Distance", value = dis, min = 1, max = 5, callback = function(bool)
	dis = bool
end})
local Style = "Under"
setting:AddList({text = "Farming Style",flag = "list",value = "Under" , values = {"Above","Behind","Under"}, callback = function(bool) 
	Style = bool
end})
Library:Init()

spawn(function()
	while wait() do 
		if Farm then
			pcall(function()
				for i,v in pairs(game:GetService("Workspace").Dummys[zone]:GetChildren()) do 
					if v.Name == mob and Farm and v:FindFirstChild("Torso") and v.HealthValue.Value > 0 then 
						repeat wait()
							if Style == "Above" then 
								Plr.Character.HumanoidRootPart.CFrame = v.Torso.CFrame * CFrame.Angles(math.rad(-90),0,0) + Vector3.new(0,dis,0)
							elseif Style == "Behind" then 
								Plr.Character.HumanoidRootPart.CFrame = v.Torso.CFrame * CFrame.new(0,0,dis)
							else
								Plr.Character.HumanoidRootPart.CFrame = v.Torso.CFrame * CFrame.Angles(math.rad(90),0,0) + Vector3.new(0,-dis,0)
							end
						until not v:FindFirstChild("Torso") or v.HealthValue.Value <= 0 or not Farm
					end
				end
			end)
		end
	end
end)


spawn(function() 
    while wait() do 
		if Quest then
            if Plr.PlayerGui.QuestScreen.QuestFrame.Position == UDim2.new(1,0,1.95000005,0) then
                local args = {
                    [1] = "Toxic",
                    [2] = Quests
                }

                game:GetService("ReplicatedStorage").Events.PlayQuest:FireServer(unpack(args))
                wait(.2)
            end
        end
    end
end)

game:GetService('RunService').Stepped:connect(function()
	if Farm then
		pcall(function()
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end)
	end
	if Speed then 
		game:GetService("ReplicatedStorage").Events.GiverSpeed_Client_Event:FireServer()

	end
	if Strength then
        game:GetService("ReplicatedStorage").Events.GiverPower_Client_Event:FireServer()
	end
end)

function Refresh()
	drop:RemoveAll("")
	local mobs2 = {}
	for i,v in pairs(game:GetService("Workspace").Dummys[zone]:GetChildren()) do
    	if not table.find(mobs2,v.Name) then
			table.insert(mobs2, v.Name)
			drop:AddValue(v.Name)
		end
	end
end
